spring.datasource.url=jdbc:postgresql://localhost:5432/bdapartamento
spring.datasource.username=admin
spring.datasource.password=admin
server.port=8089

server.servlet.context-path=/apartamentosapi
apartamento.origin-permitida=http://localhost:4200
apartamento.seguranca.enable-https=true

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.idle-timeout=10000

spring.mvc.throw-exception-if-no-handler-found=true
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.date-format=dd/MM/yyyy
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8089/apartamentosapi/oauth/check_token
spring.security.oauth2.resourceserver.opaquetoken.client-id=angular
spring.security.oauth2.resourceserver.opaquetoken.client-secret=angular

# rabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
queue.name=APARTAMENTO_EMAIL
rabbitmq.routingkey=APARTAMENTO_EMAIL

# rabbitMQ local http://localhost:15672/#
#link api local http://localhost:8089/apartamentosapi/swagger-ui.html#/
# pg-admin http://localhost:16544/login?next=%2F
# https://www.base64encode.org/  angular:angular

#  Caso queira rodar em desenvolvimento o app
#  mvn package -P desenvolvimento
#  cd target
#  java -jar .\sis.apartamentos.com.br-0.0.1-SNAPSHOT.jar

#  Caso queira rodar em producao o app
#  mvn clean package -P producao
