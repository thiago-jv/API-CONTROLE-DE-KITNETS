version: '3.2'

services:
  backend:
    container_name: backend
    restart: always
    build: .
    ports:
      - "8089:8089"
    links:
      - db-postgresql
    networks:
      - network-apartamento
    depends_on:
      - db-postgresql
    environment:
      - DB_HOST=db-postgresql
      - rabbitmq

  db-postgresql:
    container_name: db-postgresql
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=bdapartamento
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - network-apartamento

  rabbitmq:
    image: rabbitmq:3.8.3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: secret_pass
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq/
    networks:
      - network-apartamento

  # rabbitmq
  # usuario: admin
  # senha: admin

  pgadmin-compose:
    container_name: 'pgadmin_apartamento'
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "16544:80"
    networks:
      - network-apartamento

volumes:
  pgdata:
  rabbitmqdata:

networks:
  network-apartamento:
    driver: bridge
